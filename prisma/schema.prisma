// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"

  url      = env("DATABASE_URL") // pake ini saat di server
  // url      = "file:./dev.db" // pake ini saat dev
}

model Hero{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  urlFile String?
}

model KategoriInstansi{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  nama String?
  instansi Instansi[]
}

model Renstra{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  urlFile String?
  periode String?

  instansiID Int
  instansi Instansi @relation(fields: [instansiID], references: [id], onDelete: Cascade)

}

model Renja{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  urlFile String?
  tahunAnggaran String?

  instansiID Int
  instansi Instansi @relation(fields: [instansiID], references: [id], onDelete: Cascade)

}

model Lakip{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  urlFile String?
  tahunAnggaran String?

  instansiID Int
  instansi Instansi @relation(fields: [instansiID], references: [id], onDelete: Cascade)

}

model Lppd{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  urlFile String?
  tahunAnggaran String?

  instansiID Int
  instansi Instansi @relation(fields: [instansiID], references: [id], onDelete: Cascade)

}

model Dpa{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  urlFile String?
  tahunAnggaran String?

  instansiID Int
  instansi Instansi @relation(fields: [instansiID], references: [id], onDelete: Cascade)

}

model Instansi{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  namaInstansi String?


  // data dinas
  profilUrl String?
  renstra Renstra[]
  renja Renja[]
  lakip Lakip[]
  lppd Lppd[]
  dpa Dpa[]

  email String?
  phone String?
  instagram String?
  facebook String?
  twitter String?


  kategoriInstansiID Int?
  kategoriInstansi KategoriInstansi? @relation(fields: [kategoriInstansiID], references: [id], onDelete: Cascade)

  userOpd UserOpd[]
}

model UserOpd{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username String
  password String
  instansiID Int?
  instansi Instansi? @relation(fields: [instansiID], references: [id], onDelete: Cascade)
}


model Berita{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  judul String
  coverUrl String
  isi String
  isDraft Boolean @default(true)
  slug String @unique
  kategoriId Int
  kategori KategoriBerita @relation(fields: [kategoriId], references: [id], onDelete: Cascade)
}

model KategoriBerita {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  nama String
  berita Berita[]
}

model Pengumuman{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  judul String
  urlFile String?
  slug String? @unique
}

model Kegiatan{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  judul String
  waktuMulai DateTime
  waktuSelesai DateTime?
  deskripsi String?
}


model Unduhan{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  judul String
  urlFile String?
}

model Digoeltv{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  judul String
  url String
  kategori String
}

model Sejarah{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isi String
}

model Profil{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  judul String? @unique
  urlFile String?
}

model LambangDaerah{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isi String
}

model Pejabat{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  nama String
  jabatan String
  dbSearch String @unique
  urlFoto String?
  urlFrontEnd String?

  }

model SaranaPrasarana{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  judul String @unique
  urlFile String?
  urlFrontEnd String?

}


model potensiDaerah{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  judul String @unique
  urlFile String?
  urlFrontEnd String?
}


model Galery{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  judul String
  urlFile String?
  isFoto Boolean
}


model Inbox{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  nama String
  email String
  alamat String
  judul String
  pesan String

}